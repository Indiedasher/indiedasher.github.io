{"version":3,"sources":["components/Header/Header.js","containers/Dashboard/BarGraph/BarGraph.js","containers/Dashboard/Map/Map.js","containers/Dashboard/Table/Table.js","containers/Dashboard/DashSection/DashSection.js","containers/Dashboard/LineGraph/LineGraph.js","containers/Dashboard/PieChart/PieChart.js","containers/Dashboard/FilterTop/FilterTop.js","containers/Dashboard/Dashboard.js","components/Modal/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Modal/FileDrop/FileDrop.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["header","props","react_default","a","createElement","className","onClick","openmodal","BarGraph","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawChart","data","node","margin","width","height","state","firstRender","monthList","monthFormat","i","length","Month","split","slice","push","xScale","d3","domain","range","round","paddingInner","yScale","d","NetUnits","select","attr","ticks","tickFormat","selectAll","style","exit","remove","bars","enter","append","bandwidth","merge","transition","duration","setState","_this2","graphID","ref","dist_default","id","Component","colorScale","Map","addMapSalesDataHandler","md","Mapdata","objects","ne_50m_admin_0_countries","geometries","_loop","some","CountryCode","properties","ISO_A2","dataCountryIndex","findIndex","NETUNITS","maxSalesNum","Math","max","apply","map","o","loadNewData","optimizationDisabled","showDefault","zoom","mapData","handleZoomIn","bind","assertThisInitialized","handleZoomOut","prevProps","prevState","Fragment","lib","projection","projectionConfig","scale","geography","disableOptimization","geographies","data-tip","NAME","data-for","key","default","fill","stroke","strokeWidth","outline","hover","pressed","nextProps","Table","calculatePercentage","salesTotal","percent","Percent","tableData","es","background","marginTop","fontSize","columns","Header","accessor","showPagination","loading","defaultSorted","desc","defaultPageSize","minRows","dashSection","children","LineGraph","drawLine","top","bottom","left","right","chargeBackData","ChargeBacks","line","x","y","datum","dots","PieChart","toolTipHandler","pieData","drawPie","ReactTooltip","rebuild","radius","min","color","innerRadius","outerRadius","arc","pie","value","svg","arcs","Region","Platform","_this3","filterTop","storeFilters","gameFilters","timeFiltersStart","timeFiltersEnd","Dashboard","setNewFiltersHandler","event","category","newFilters","store","filters","game","dateStart","dateEnd","country","region","platform","target","calculateComponentData","retrieveFilteredData","dataPoint","dateName","filteredData","storeList","gameList","newDataRow","storeNames","keys","s","gameNames","g","filter","index","self","indexOf","moment","isBefore","isAfter","Date","Game","Store","Country","Chargebacks","ChargebacksUSD","NetSales","cName","MapData","j","k","rawFilteredData","rawData","calculateTableMapData","calculateRegionData","calculatePlatformData","calculateTimeSeriesData","calculateChargebackData","tableMapData","countryCodeList","newObject","toFixed","regionData","regionList","chargeData","dateList","monthDate","format","ChargeBacksUSD","chargebackData","timeData","timeSeriesData","platformData","platformList","setTopFiltersHandler","storeKeyList","storeFrontList","timeList","gameKeyList","createSelectItems","array","items","mapList","newData","FilterTop_FilterTop","onChange","DashSection_DashSection","Dashboard_Map_Map","Dashboard_BarGraph_BarGraph","graphid","Dashboard_Table_Table","Dashboard_LineGraph_LineGraph","Dashboard_PieChart_PieChart","backdrop","show","clicked","Modal","nextState","Backdrop_Backdrop","modalClosed","transform","opacity","showDropDialog","acceptedPlatforms","FileDrop","onDrop","acceptedFiles","rejectedFiles","accepted","rejected","reader","FileReader","file","onload","fileAsText","result","newFileAsText","platformID","gameName","dropFileType","lines","splice","join","Papa","parse","skipEmptyLines","dynamicTyping","newObj","onabort","console","log","onerror","readAsText","fileTypeHandler","e","clickModalClosed","sendData","f","name","size","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","textAlign","activeStyle","backgroundColor","dist_es","accept","_ref","getRootProps","getInputProps","isDragActive","styles","objectSpread","assign","Layout","getRawDataHandler","childRawData","uploading","openModalHander","closeModalHandler","components_Modal_Modal","Modal_FileDrop_FileDrop","Header_Header","containers_Dashboard_Dashboard","App","containers_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f62e590c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nconst header = (props) => {\r\n\r\n    return(\r\n        <div className=\"Header\">\r\n            <h1 className=\"Header-item\">INDIEDASH</h1>\r\n            <p className=\"Header-item\">analytics for indies</p>\r\n            <button\r\n                className=\"Header-upload\"\r\n                onClick={props.openmodal}>upload</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './BarGraph.css';\r\n\r\nclass BarGraph extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstRender : false\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.drawChart(this.props.data);\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        this.drawChart(this.props.data);\r\n    }\r\n\r\n    drawChart = (data) => {\r\n        const node = this.node;\r\n\r\n        const margin = {top: 32, right: 8, bottom: 40, left: 32}\r\n        let width = this.props.width - margin.left - margin.right, height = this.props.height - margin.bottom - margin.top;\r\n\r\n        // const svg = d3.select(node) //'#' + this.props.graphid\r\n        //     .append('svg')\r\n        //     .attr('width', width + margin.left + margin.right)\r\n        //     .attr('height', height + margin.top + margin.bottom)\r\n        //     .attr('id', this.props.graphid);\r\n\r\n        // const g = svg.append('g')\r\n        //     .attr('transform', \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        if (data !== null) {\r\n            if (!this.state.firstRender) {\r\n                this.setState({firstRender: true});\r\n                // let width = document.getElementById(this.props.graphid).offsetWidth,\r\n                //     height = document.getElementById(this.props.graphid).offsetHeight\r\n\r\n                //Abbreviate Month Names and Years From Data\r\n                let monthList = [];\r\n                let monthFormat = \"\";\r\n                for (let i = 0; i < data.length; i++) {\r\n                    monthFormat = data[i].Month.split('0')[1];\r\n                    monthFormat = monthFormat.slice(0,6);\r\n                    monthList.push(monthFormat);\r\n                }\r\n\r\n                const xScale = d3.scaleBand()\r\n                                .domain(d3.range(data.length))\r\n                                .range([0 + margin.left, width - margin.right])\r\n                                .round(true)\r\n                                .paddingInner(0.1);\r\n\r\n                const yScale = d3.scaleLinear()\r\n                                .domain([0, d3.max(data, function(d) { return d.NetUnits; })])\r\n                                .range([height - margin.bottom, 0]);\r\n\r\n                // Y-AXIS\r\n                d3.select(node).append('g')\r\n                    .attr('transform', 'translate(' + (xScale(0) - 4) + \",\" + (margin.top + 4) + \")\") // - margin.left - 4\r\n                    .attr('class', 'yaxis')\r\n                    .call(d3.axisLeft(yScale)\r\n                        .ticks(10, 's'));\r\n\r\n                // X-AXIS\r\n                d3.select(node).append('g')\r\n                    .attr('transform', 'translate(' + (-2) +' , ' + (height - 4) + \")\") //x: (-xScale.bandwidth()) y: - margin.bottom\r\n                    .attr('class', 'xaxis')\r\n                    .call(d3.axisBottom(xScale)\r\n                        .ticks(data.length)\r\n                        .tickFormat((d,i) => {return monthList[i];}))\r\n                    .selectAll(\"text\")\r\n                        .attr(\"y\", 0)\r\n                        .attr(\"x\", 9)\r\n                        .attr(\"dy\", \".35em\")\r\n                        .attr(\"transform\", \"rotate(90)\")\r\n                        .style(\"text-anchor\", \"start\");\r\n\r\n                d3.select(node).selectAll('rect')\r\n                    .data(data)\r\n                    .exit()\r\n                    .remove();\r\n                \r\n                d3.select(node).selectAll('rect')\r\n                    .data(data)\r\n                    .enter()\r\n                    .append('rect')\r\n                    .attr('class', 'bar')\r\n                    .attr('x', function(d, i) { \r\n                        return xScale(i); \r\n                    })\r\n                    .attr('y', function(d) { return yScale(d.NetUnits) + margin.bottom - 4; }) //height - 8 - ...\r\n                    .attr(\"width\", xScale.bandwidth())\r\n                    .attr(\"height\", (d) => {\r\n                        return yScale(0) - yScale(d.NetUnits);\r\n                    })\r\n                    .attr('data-tip', (d) => {\r\n                        return d.NetUnits + \" Net Units\";\r\n                    })\r\n                    .attr('data-for', 'svgTooltip')\r\n                    .style('fill', '#d62728');\r\n\r\n            } else {\r\n\r\n                let monthList = [];\r\n                let monthFormat = \"\";\r\n                for (let i = 0; i < data.length; i++) {\r\n                    monthFormat = data[i].Month.split('0')[1];\r\n                    monthFormat = monthFormat.slice(0,6);\r\n                    monthList.push(monthFormat);\r\n                }\r\n\r\n                const xScale = d3.scaleBand()\r\n                                .domain(d3.range(data.length))\r\n                                .range([0 + margin.left, width - margin.right])\r\n                                .round(true)\r\n                                .paddingInner(0.1);\r\n\r\n                const yScale = d3.scaleLinear()\r\n                                .domain([0, d3.max(data, function(d) { return d.NetUnits; })])\r\n                                .range([height - margin.bottom, 0]);\r\n\r\n                // Y-AXIS\r\n                d3.select(node).select('.yaxis')\r\n                .attr('transform', 'translate(' + (xScale(0) - 4) + \",\" + (margin.top + 4) + \")\") // - margin.left - 4\r\n                .attr('class', 'yaxis')\r\n                .call(d3.axisLeft(yScale)\r\n                    .ticks(10, 's'));\r\n\r\n                //X AXIS\r\n                d3.select(node).select('.xaxis')\r\n                .attr('transform', 'translate(' + (-2) +' , ' + (height - 4) + \")\") //x: (-xScale.bandwidth()) y: - margin.bottom\r\n                .attr('class', 'xaxis')\r\n                .call(d3.axisBottom(xScale)\r\n                    .ticks(data.length)\r\n                    .tickFormat((d,i) => {return monthList[i];}))\r\n                .selectAll(\"text\")\r\n                    .attr(\"y\", 0)\r\n                    .attr(\"x\", 9)\r\n                    .attr(\"dy\", \".35em\")\r\n                    .attr(\"transform\", \"rotate(90)\")\r\n                    .style(\"text-anchor\", \"start\");\r\n\r\n\r\n                d3.select(node).selectAll('rect')\r\n                    .data(data)\r\n                    .exit()\r\n                    .remove();\r\n\r\n                //Update the graph\r\n                const bars = d3.select(node).selectAll('rect')\r\n                    .data(data);\r\n                \r\n                bars.enter()\r\n                    .append('rect')\r\n                    .attr('x', width)\r\n                    .attr('y', function(d) { return yScale(d.NetUnits) + margin.bottom - 4; })\r\n                    .attr(\"width\", xScale.bandwidth())\r\n                    .attr(\"height\", (d) => {\r\n                        return yScale(0) - yScale(d.NetUnits);\r\n                    })\r\n                    .attr('data-tip', (d) => {\r\n                        return d.NetUnits + \" Net Units\";\r\n                    })\r\n                    .attr('data-for', 'svgTooltip')\r\n                    .merge(bars)\r\n                    .transition()\r\n                    .duration(500)\r\n                    .attr('x', function(d, i) { \r\n                        return xScale(i);\r\n                    })\r\n                    .attr('y', function(d) { return yScale(d.NetUnits) + margin.bottom - 4; })\r\n                    .attr(\"width\", xScale.bandwidth())\r\n                    .attr(\"height\", (d) => {\r\n                        return yScale(0) - yScale(d.NetUnits);\r\n                    })\r\n                    .attr('data-tip', (d) => {\r\n                        return d.NetUnits + \" Net Units\";\r\n                    })\r\n                    .attr('data-for', 'svgTooltip')\r\n                    .style('fill', '#d62728');\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"GraphBox\">\r\n                <svg className={this.props.graphID} ref={node => this.node = node}\r\n                width={this.props.width} height={this.props.height}>\r\n                </svg>\r\n                <ReactTooltip id=\"svgTooltip\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// {/* <svg ref={node => this.node = node}\r\n// width={this.props.width} height={this.props.height}>\r\n// </svg> */}\r\n\r\nexport default BarGraph;","import React, {Component} from 'react';\r\nimport {\r\n    ComposableMap,\r\n    ZoomableGroup,\r\n    Geographies,\r\n    Geography,\r\n} from 'react-simple-maps';\r\nimport * as d3 from 'd3';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport Mapdata from './world-50m.json';\r\nimport './Map.css';\r\n\r\nconst colorScale = d3.scaleLinear()\r\n    //.domain([0, 900])\r\n    .range(['#bdc9e1','#74a9cf','#2b8cbe','#045a8d']);\r\n\r\nclass Map extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            zoom: 1,\r\n            mapData: null,\r\n            showDefault: true,\r\n            optimizationDisabled: false\r\n        }\r\n\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.mapData !== prevState.mapData) {\r\n            return {mapData: nextProps.mapData};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.mapData !== this.props.mapData) {\r\n            this.setState({mapData: this.props.mapData});\r\n            this.addMapSalesDataHandler(this.state.mapData);\r\n        }\r\n    }\r\n\r\n    addMapSalesDataHandler = (data) => {\r\n        const md = Mapdata.objects.ne_50m_admin_0_countries.geometries;\r\n        for (let i = 0; i < md.length; i++) {\r\n            if (data.some(data => data.CountryCode === md[i].properties.ISO_A2)) {\r\n                let dataCountryIndex = data.findIndex(data => data.CountryCode === md[i].properties.ISO_A2);\r\n                Mapdata.objects.ne_50m_admin_0_countries.geometries[i].properties.NETUNITS = data[dataCountryIndex].NetUnits;\r\n            } else {\r\n                //Set the Net Units to Zero\r\n                Mapdata.objects.ne_50m_admin_0_countries.geometries[i].properties.NETUNITS = 0;\r\n            }\r\n        }\r\n        let maxSalesNum = Math.max.apply(Math, data.map((o) => { return o.NetUnits}));\r\n        colorScale.domain([0, Math.round(maxSalesNum/4)]);\r\n        this.loadNewData();\r\n    }\r\n\r\n    loadNewData = () => {\r\n        this.setState({\r\n            optimizationDisabled: true,\r\n            showDefault: false, //CHANGE THIS (THIS IS WHAT CAUSES IT TO NOT DISPLAY)\r\n          }, () => {\r\n            this.setState({\r\n              optimizationDisabled: false,\r\n            })\r\n          })\r\n    }\r\n\r\n    handleZoomIn() {\r\n        this.setState({\r\n            zoom: this.state.zoom * 2\r\n        });\r\n    }\r\n\r\n    handleZoomOut() {\r\n        this.setState({\r\n            zoom: this.state.zoom / 2\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <div className=\"MapRec\">\r\n                <ComposableMap className=\"Map\"\r\n                    projection=\"miller\"\r\n                    projectionConfig={{\r\n                        scale: 140\r\n                    }}>\r\n                    <ZoomableGroup zoom={this.state.zoom}>\r\n                        <Geographies geography={Mapdata} disableOptimization={ this.state.optimizationDisabled }>\r\n                          {(geographies, projection) => geographies.map(geography=> (\r\n                              <Geography\r\n                                data-tip={geography.properties.NAME + \" : \" + geography.properties.NETUNITS + \" Units\"}\r\n                                data-for=\"mapTooltip\"\r\n                                key={geography.id}\r\n                                geography={geography}\r\n                                projection={projection}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: this.state.showDefault ? '#bdc9e1' : colorScale(geography.properties.NETUNITS),\r\n                                        stroke: 'white',\r\n                                        strokeWidth: 1,\r\n                                        outline: 'none'\r\n                                    },\r\n                                    hover: {\r\n                                        fill: '#ff7f0e',\r\n                                        stroke: 'white',\r\n                                        strokeWidth: 1,\r\n                                        outline: 'none'\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: '#ff7f0e',\r\n                                        stroke: 'white',\r\n                                        strokeWidth: 1,\r\n                                        outline: 'none'\r\n                                    }\r\n                                }}\r\n                              />\r\n                          ))}\r\n                        </Geographies>\r\n                    </ZoomableGroup>\r\n                </ComposableMap>\r\n                <ReactTooltip id=\"mapTooltip\"/>\r\n            </div>\r\n            <div className=\"ZoomBtnGroup\">\r\n                <button className=\"ZoomBtn\" onClick={ this.handleZoomIn }>{ \"+\" }</button>\r\n                <button className=\"ZoomBtn\" onClick={ this.handleZoomOut }>{ \"-\" }</button>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\n\r\nimport './Table.css';\r\nimport 'react-table/react-table.css'\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tableData: null\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.tableData !== prevState.tableData) {\r\n            return {tableData: nextProps.tableData};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.tableData !== this.props.tableData) {\r\n            this.setState({tableData: this.props.tableData});\r\n            this.calculatePercentage(this.state.tableData);\r\n        }\r\n    }\r\n\r\n    calculatePercentage = (data) => {\r\n        let salesTotal = 0;\r\n        let percent = 0;\r\n        for (let i = 0; i < data.length; i++) {\r\n            salesTotal += data[i].NetUnits;\r\n        }\r\n        for (let i = 0; i < data.length; i++) {\r\n            percent = Math.round((data[i].NetUnits/salesTotal)*100);\r\n            data[i].Percent = percent;\r\n        }\r\n        this.setState({tableData: data});\r\n    }\r\n\r\n    render () {\r\n        let data = [{}],\r\n        rowNum = 10;\r\n        if (this.state.tableData !== null) {\r\n            data = this.state.tableData;\r\n            rowNum = this.state.tableData.length;\r\n        }\r\n\r\n        const columns = [{\r\n            Header: \"Country\",\r\n            accessor: \"Country\"\r\n        }, {\r\n            Header: \"% of Total\",\r\n            accessor: \"Percent\"\r\n        }, {\r\n            Header: \"Net Units\",\r\n            accessor: 'NetUnits'\r\n        }, {\r\n            Header: \"Net Sales (USD)\",\r\n            accessor: 'NetSales'\r\n        }]\r\n\r\n        return (\r\n            <ReactTable\r\n                className=\"-striped -highlight\"\r\n                style={{\r\n                    height: '40%',\r\n                    width: '100%',\r\n                    background: 'white',\r\n                    marginTop: '16px',\r\n                    fontSize: '12px'\r\n                }} \r\n                data={data}\r\n                columns={columns}\r\n                showPagination={false}\r\n                loading={false}\r\n                defaultSorted={[\r\n                    {\r\n                        id: 'NetUnits',\r\n                        desc: true\r\n                    }\r\n                ]}\r\n                defaultPageSize={100} //MAGIC NUMBER CHANGE THIS FOOL!\r\n                minRows={100}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nimport './DashSection.css';\r\n\r\n/*\r\n    Easily segment the dashboard vertically with these dash sections\r\n    props {\r\n        width,\r\n        children\r\n    }\r\n*/\r\n\r\nconst dashSection = (props) => {\r\n\r\n    return(\r\n        <div \r\n            className=\"DashSection\"\r\n            style={{width: props.width}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default dashSection;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport './LineGraph.css';\r\n\r\nclass LineGraph extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstRender: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawLine(this.props.data);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawLine(this.props.data);\r\n    }\r\n\r\n    drawLine = (data) => {\r\n        const node = this.node;\r\n\r\n        if (data !== null) {\r\n\r\n            const margin = {top: 16, bottom: 32, left: 24, right: 8};\r\n            let width = this.props.width - margin.left - margin.right, height = this.props.height - margin.bottom - margin.top;\r\n\r\n\r\n            if (!this.state.firstRender) {\r\n                this.setState({firstRender: true});\r\n                // let width = document.getElementById(this.props.graphid).offsetWidth,\r\n                // height = document.getElementById(this.props.graphid).offsetHeight;\r\n\r\n                let monthList = [];\r\n                let monthFormat = \"\";\r\n                for (let i = 0; i < data.length; i++) {\r\n                    monthFormat = data[i].Month.split('0')[1];\r\n                    monthFormat = monthFormat.slice(0,6);\r\n                    monthList.push(monthFormat);\r\n                }\r\n\r\n                let chargeBackData = [];\r\n                for (let i = 0; i < data.length; i++ ) {\r\n                    chargeBackData.push(data[i].ChargeBacks);\r\n                }\r\n\r\n                // const svg = d3.select(node) //'#' + this.props.graphid\r\n                //             .append('svg')\r\n                //             .attr('width', width + margin.left + margin.right)\r\n                //             .attr('height', height + margin.top + margin.bottom)\r\n                //             .attr('id', 'line')\r\n                //             .attr('transform', 'translate(0, 0)');\r\n                \r\n                const xScale = d3.scaleLinear()\r\n                            .domain([0, data.length])\r\n                            .range([0 + margin.left, width - margin.right ]);\r\n                \r\n                const yScale = d3.scaleLinear()\r\n                            .domain([0, d3.max(data, function(d) { return d.ChargeBacks; })])\r\n                            .range([height - margin.top, margin.bottom]);\r\n\r\n                let line = d3.line()\r\n                            .x((d, i) => { \r\n                                return xScale(i); \r\n                            })\r\n                            .y((d) => { return yScale(d) - margin.top; });\r\n\r\n                d3.select(node).append('path')\r\n                    .datum(chargeBackData)\r\n                    .attr('class', 'line')\r\n                    .attr('d', line);\r\n                \r\n                //X AXIS\r\n                d3.select(node).append('g')\r\n                    .attr('class', 'xaxis')\r\n                    .attr('transform', 'translate(0,'+ (height - margin.bottom) + ')')\r\n                    .call(d3.axisBottom(xScale)\r\n                        .ticks(data.length)\r\n                        .tickFormat((d,i) => {return monthList[i];}))\r\n                    .selectAll(\"text\")\r\n                        .attr(\"y\", 0)\r\n                        .attr(\"x\", 9)\r\n                        .attr(\"dy\", \".35em\")\r\n                        .attr(\"transform\", \"rotate(90)\")\r\n                        .style(\"text-anchor\", \"start\");\r\n\r\n                //Y AXIS\r\n                d3.select(node).append('g')\r\n                    .attr('class', 'yaxis')\r\n                    .attr('transform', 'translate(' + (xScale(0)) + \",\" + (0 - margin.bottom*0.5) +\")\")\r\n                    .call(d3.axisLeft(yScale)\r\n                        .ticks(10));\r\n\r\n                d3.select(node).selectAll('dot')\r\n                    .data(data)\r\n                    .enter()\r\n                    .append('circle')\r\n                    .attr('class', 'dot')\r\n                    .attr('cx', function(d, i) { return xScale(i); })\r\n                    .attr('cy', function(d, i) {\r\n                        return yScale(d.ChargeBacks) - margin.top; \r\n                    })\r\n                    .attr('r', 3)\r\n                    .attr('data-tip', function(d) {\r\n                        return d.ChargeBacks + \" Chargebacks\"\r\n                    })\r\n                    .attr('data-for', 'svgTooltip');\r\n                    // .on('mouseover', function(d,i) {\r\n                    // d3.select(this)\r\n                    //     .transition()\r\n                    //     .duration(100)\r\n                    //     .style('fill', 'red')\r\n                    //     .attr('r', 5);\r\n                    // })\r\n                    // .on('mouseout', function() {\r\n                    //     d3.select(this)\r\n                    //         .transition()\r\n                    //         .duration(200)\r\n                    //         .style('fill', 'yellow')\r\n                    //         .attr('r', 2);\r\n                    // });\r\n            } else {\r\n                //Update the Data\r\n                let monthList = [];\r\n                let monthFormat = \"\";\r\n                for (let i = 0; i < data.length; i++) {\r\n                    monthFormat = data[i].Month.split('0')[1];\r\n                    monthFormat = monthFormat.slice(0,6);\r\n                    monthList.push(monthFormat);\r\n                }\r\n\r\n                let chargeBackData = [];\r\n                for (let i = 0; i < data.length; i++ ) {\r\n                    chargeBackData.push(data[i].ChargeBacks);\r\n                }\r\n\r\n                const xScale = d3.scaleLinear()\r\n                .domain([0, data.length])\r\n                .range([0 + margin.left, width - margin.right ]);\r\n    \r\n                const yScale = d3.scaleLinear()\r\n                            .domain([0, d3.max(data, function(d) { return d.ChargeBacks; })])\r\n                            .range([height - margin.top, margin.bottom]);\r\n\r\n                //X AXIS\r\n                d3.select(node).select('.xaxis')\r\n                    .attr('class', 'xaxis')\r\n                    .attr('transform', 'translate(0,'+ (height - margin.bottom) + ')')\r\n                    .call(d3.axisBottom(xScale)\r\n                        .ticks(data.length)\r\n                        .tickFormat((d,i) => {return monthList[i];}))\r\n                    .selectAll(\"text\")\r\n                        .attr(\"y\", 0)\r\n                        .attr(\"x\", 9)\r\n                        .attr(\"dy\", \".35em\")\r\n                        .attr(\"transform\", \"rotate(90)\")\r\n                        .style(\"text-anchor\", \"start\");\r\n            \r\n                //Y AXIS\r\n                d3.select(node).select('.yaxis')\r\n                    .attr('class', 'yaxis')\r\n                    .attr('transform', 'translate(' + (xScale(0)) + \",\" + (0 - margin.bottom*0.5) +\")\")\r\n                    .call(d3.axisLeft(yScale)\r\n                        .ticks(10));\r\n\r\n                let line = d3.line()\r\n                            .x((d, i) => { \r\n                                return xScale(i); \r\n                            })\r\n                            .y((d) => { return yScale(d) - margin.top; });\r\n\r\n                d3.select(node).select('.line')\r\n                    .datum(chargeBackData)\r\n                    //.attr('class', 'line')\r\n                    .attr('d', line);\r\n\r\n                d3.select(node).selectAll('circle')\r\n                    .data(data)\r\n                    .exit()\r\n                    .remove();\r\n\r\n                const dots = d3.select(node).selectAll('circle')\r\n                            .data(data);\r\n\r\n                d3.select(node).selectAll('circle')\r\n                    .data(data)\r\n                    .enter()\r\n                    .append('circle')\r\n                    .attr('cx', width)\r\n                    .attr('cy', function(d, i) {\r\n                        return yScale(d.ChargeBacks) - margin.top; \r\n                    })\r\n                    .attr('r', 3)\r\n                    .attr('data-tip', function(d) {\r\n                        return d.ChargeBacks + \" Chargebacks\"\r\n                    })\r\n                    .attr('data-for', 'svgTooltip')\r\n                    .merge(dots)\r\n                    .transition()\r\n                    .duration(500)\r\n                    .attr('class', 'dot')\r\n                    .attr('cx', function(d, i) { return xScale(i); })\r\n                    .attr('cy', function(d, i) {\r\n                        return yScale(d.ChargeBacks) - margin.top; \r\n                    })\r\n                    .attr('r', 2)\r\n                    .attr('data-tip', function(d) {\r\n                        return d.ChargeBacks + \" Chargebacks\"\r\n                    })\r\n                    .attr('data-for', 'svgTooltip');\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Graph\">\r\n                <svg ref={node => this.node = node}\r\n                className={this.props.graphID}\r\n                width={this.props.width} height={this.props.height}>\r\n                </svg>\r\n                <ReactTooltip id=\"svgTooltip\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LineGraph;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n//import Tooltip from '../../../components/Tooltip/Tooltip';\r\n\r\nimport './PieChart.css';\r\n\r\nclass PieChart extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            pieData : null\r\n        }\r\n        this.drawPie = this.drawPie.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.pieData !== prevState.pieData) {\r\n            return {pieData: nextProps.pieData};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.pieData !== this.props.pieData) {\r\n            this.setState({pieData: this.props.pieData}, () => {\r\n                //console.log(this.state.pieData);\r\n            });\r\n            this.drawPie(this.state.pieData);\r\n        }\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.drawPie();\r\n    // }\r\n\r\n    drawPie(data) {\r\n        const node = this.node;\r\n        d3.select('donut').remove();\r\n\r\n        let width = this.props.width, height = this.props.height;\r\n        let radius = Math.min(width, height)/2,\r\n            color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n        const innerRadius = radius - 40;\r\n        const outerRadius = radius - 10;\r\n\r\n        const arc = d3.arc()\r\n                    .innerRadius(innerRadius)\r\n                    .outerRadius(outerRadius);\r\n\r\n        const pie = d3.pie()\r\n                        .value((d) => { return d.NetUnits });\r\n\r\n        // let width = document.getElementById(this.props.graphid).offsetWidth,\r\n        //     height = document.getElementById(this.props.graphid).offsetHeight\r\n\r\n        const svg = d3.select(node) //'#' + this.props.graphid\r\n                .append('svg')\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .attr('id', 'donut')\r\n                .attr('transform', 'translate(0, 0)');\r\n        \r\n        let arcs = svg.selectAll('g.arc')\r\n                .data(pie(data))\r\n                .enter()\r\n                .append('g')\r\n                .attr('class', 'arc')\r\n                .attr('transform', 'translate(' + outerRadius + ', ' + outerRadius + ')');\r\n\r\n        svg.selectAll('g.arc')\r\n            .data(pie(data))\r\n            .exit()\r\n            .remove();\r\n\r\n        arcs.append('path')\r\n            .attr('fill', (d, i) => {\r\n                return color(i);\r\n            })\r\n            .attr('d', arc)\r\n            .attr('data-tip', (d) => {\r\n                switch(this.props.graphID) {\r\n                    case \"pieRegion\":\r\n                        return d.data.Region + \": \" + d.data.NetUnits + \" Units\";\r\n                    case \"piePlatform\":\r\n                        return d.data.Platform + \": \" + d.data.NetUnits + \" Units\";\r\n                    default:\r\n                        return \"Undefined\";\r\n                }\r\n            })\r\n            .attr('data-for', 'svgTooltip')\r\n            .style('stroke', 'white');\r\n            // .on(\"mouseover\", function(d) {\r\n            //     toolTipDisplay = \"Region: \" + d.data.Region + '\\nNet Units: ' + d.data.NetUnits;\r\n            //     //console.log(toolTipDisplay);\r\n            // })\r\n            // .on(\"mouseout\", (d) => {\r\n            //     toolTipDisplay = null;\r\n            // });\r\n    }\r\n\r\n    toolTipHandler = (props) => {\r\n        return (\r\n            <div className=\"toolTip\">\r\n                <p>{props}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        let varName = \"My Region\"\r\n\r\n        return(\r\n            <div className=\"PieBox\">\r\n                <svg ref={node => this.node = node}\r\n                width={this.props.width} height={this.props.height}>\r\n                </svg>\r\n                <ReactTooltip id=\"svgTooltip\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\n\r\nimport './FilterTop.css';\r\n\r\nconst filterTop = (props) => {\r\n\r\n    return (\r\n        <div className=\"FilterTop\">\r\n            <p>{props.children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default filterTop;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport BarGraph from './BarGraph/BarGraph';\r\nimport Map from './Map/Map';\r\nimport Table from './Table/Table';\r\nimport DashSection from './DashSection/DashSection';\r\nimport LineGraph from './LineGraph/LineGraph';\r\nimport PieChart from './PieChart/PieChart';\r\n//import FilterMenu from './FilterMenu/FilterMenu';\r\nimport FilterTop from './FilterTop/FilterTop';\r\nimport MapData from './Map/world-50m.json';\r\n\r\nimport './Dashboard.css';\r\n\r\nlet storeFilters = <option value=\"All\">All Stores</option>;\r\nlet gameFilters = <option value=\"All\">All Games</option>;\r\nlet timeFiltersStart = <option value=\"Start\">Start</option>;\r\nlet timeFiltersEnd = <option value=\"End\">End</option>;\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData : {},\r\n            tableMapData: null,\r\n            regionData: null,\r\n            timeSeriesData: null,\r\n            chargebackData: null,\r\n            platformData: null,\r\n            mapList: null,\r\n            filters: {\r\n                store: 'All Stores',\r\n                game: 'All Games',\r\n                dateStart: 'Start',\r\n                dateEnd: 'End',\r\n                country: 'All',\r\n                region: 'All',\r\n                platform: 'All'\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.newData !== prevState.rawData) {\r\n            return {rawData: nextProps.newData};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.newData !== this.props.newData) {\r\n            this.setState({rawData: this.props.newData});\r\n            this.setTopFiltersHandler(this.state.rawData);\r\n            this.calculateComponentData();\r\n        }\r\n    }\r\n\r\n    setNewFiltersHandler = (event, category) => {\r\n        let newFilters = {\r\n            store: this.state.filters.store,\r\n            game: this.state.filters.game,\r\n            dateStart: this.state.filters.dateStart,\r\n            dateEnd: this.state.filters.dateEnd,\r\n            country: this.state.filters.country,\r\n            region: this.state.filters.region,\r\n            platform: this.state.filters.platform\r\n        }\r\n        newFilters[category] = event.target.value;\r\n        this.setState({filters: newFilters}, () => {\r\n            this.calculateComponentData();\r\n        });\r\n    }\r\n\r\n    retrieveFilteredData = (data, filters) => {\r\n        //Retrive all data depending on the filters and return it formatted\r\n        let filteredData = [];\r\n        let storeList = [];\r\n        let gameList = [];\r\n        let newDataRow = {};\r\n        let mapList = [];\r\n\r\n        //STORE FILTERS\r\n        if (filters.store === 'All Stores') {\r\n            //Iterate through all stores\r\n            let storeNames = Object.keys(data)\r\n            for (let s in storeNames) {\r\n                storeList.push(storeNames[s]);\r\n            }\r\n        } else {\r\n            //Iterate through the selected store\r\n            storeList.push(filters.store);\r\n        }\r\n\r\n        //GAME FILTERS\r\n        if (filters.game === 'All Games') {\r\n            //Iterate through all games\r\n            let gameNames = [];\r\n            for (let s in storeList) {\r\n                gameNames = Object.keys(data[storeList[s]]);\r\n                for (let g in gameNames) {\r\n                    gameList.push(gameNames[g]);\r\n                }\r\n            }\r\n        } else {\r\n            //Iterate through the selected game\r\n            gameList.push(filters.game);\r\n        }\r\n        gameList = gameList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n\r\n        let dataPoint, dateName;\r\n        for (let store in storeList) {\r\n            for (let game in gameList) {\r\n                //Crunch data and format it\r\n                for (let i = 0; i < data[storeList[store]][gameList[game]].data.length; i++) {\r\n                    dataPoint = data[storeList[store]][gameList[game]].data;\r\n                    if (storeList[store] === 'Itchio') {\r\n                        data[storeList[store]][gameList[game]].data[i]['created_at'] = data[storeList[store]][gameList[game]].data[i]['created_at'].split(' ')[0];\r\n                        dateName = 'created_at';\r\n                    } else if (storeList[store] === 'Steam') {\r\n                        dateName = 'Date';\r\n                    }\r\n                    if ((!moment(dataPoint[i][dateName]).isBefore(this.state.filters.dateStart, 'month')) && (!moment(dataPoint[i][dateName]).isAfter(this.state.filters.dateEnd, 'month'))) {\r\n                        switch(storeList[store]) {\r\n                            case 'Steam':\r\n                                newDataRow = {\r\n                                    Date: data[storeList[store]][gameList[game]].data[i]['Date'],\r\n                                    Game: data[storeList[store]][gameList[game]].data[i]['Game'],\r\n                                    Store: 'Steam',\r\n                                    Platform: data[storeList[store]][gameList[game]].data[i]['Platform'],\r\n                                    CountryCode: data[storeList[store]][gameList[game]].data[i]['Country Code'],\r\n                                    Country: data[storeList[store]][gameList[game]].data[i]['Country'],\r\n                                    Region: data[storeList[store]][gameList[game]].data[i]['Region'],\r\n                                    Chargebacks: data[storeList[store]][gameList[game]].data[i]['Chargeback/Returns'],\r\n                                    ChargebacksUSD: data[storeList[store]][gameList[game]].data[i]['Chargeback/Returns (USD)'],\r\n                                    NetUnits: data[storeList[store]][gameList[game]].data[i]['Net Units Sold'],\r\n                                    NetSales: data[storeList[store]][gameList[game]].data[i]['Net Steam Sales (USD)']\r\n                                }\r\n                                break;\r\n                            case 'Itchio':\r\n                                //Get Country Name from Country Code\r\n                                let cName = '';\r\n                                const md = MapData.objects.ne_50m_admin_0_countries.geometries;\r\n                                for (let j = 0; j < md.length; j++) {\r\n                                    for (let k=0; k < data[storeList[store]][gameList[game]].data.length; k++) {\r\n                                        if (data[storeList[store]][gameList[game]].data[k]['country_code'] === md[j].properties.ISO_A2) {\r\n                                            cName = md[j].properties.NAME;\r\n                                            data[storeList[store]][gameList[game]].data[k]['country'] = cName;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                newDataRow = {\r\n                                    Date: data[storeList[store]][gameList[game]].data[i]['created_at'],\r\n                                    Game: data[storeList[store]][gameList[game]].data[i]['object_name'],\r\n                                    Store: 'Itchio',\r\n                                    Platform: 'N/A',\r\n                                    CountryCode: data[storeList[store]][gameList[game]].data[i]['country_code'],\r\n                                    Country: data[storeList[store]][gameList[game]].data[i]['country'],\r\n                                    Region: 'N/A',\r\n                                    Chargebacks: 'N/A',\r\n                                    ChargebacksUSD: 'N/A',\r\n                                    NetUnits: 1,\r\n                                    NetSales: data[storeList[store]][gameList[game]].data[i]['amount_delivered']\r\n                                }\r\n                                break;\r\n                            default: break;\r\n                        }\r\n                        filteredData.push(newDataRow);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n\r\n    calculateComponentData = () => {\r\n        //Calculate all the data for the various components and store it into state\r\n        let rawFilteredData = this.retrieveFilteredData(this.state.rawData, this.state.filters);\r\n\r\n        //NOW CALCULATE ALL DATA FOR COMPONENTS\r\n        this.calculateTableMapData(rawFilteredData);\r\n        this.calculateRegionData(rawFilteredData);\r\n        this.calculatePlatformData(rawFilteredData);\r\n        this.calculateTimeSeriesData(rawFilteredData);\r\n        this.calculateChargebackData(rawFilteredData);\r\n    }\r\n\r\n    calculateTableMapData = (data) => {\r\n        let tableMapData = [];\r\n        let countryCodeList = [];\r\n        let newObject = {};\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            countryCodeList.push(data[i].CountryCode);\r\n        }\r\n        countryCodeList = countryCodeList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n        //Init objects\r\n        for (let i = 0; i < countryCodeList.length; i++) {\r\n            newObject = {\r\n                CountryCode: countryCodeList[i],\r\n                Country: \"\",\r\n                NetUnits: 0,\r\n                NetSales: 0\r\n            }\r\n            tableMapData.push(newObject);\r\n        }\r\n        //Fill the objects\r\n        for (let i =0; i < tableMapData.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (tableMapData[i].CountryCode === data[j].CountryCode) {\r\n                    if (tableMapData[i].Country === \"\") {\r\n                        tableMapData[i].Country = data[j].Country;\r\n                    }\r\n                    tableMapData[i].NetUnits += data[j].NetUnits;\r\n                    tableMapData[i].NetSales += data[j].NetSales;\r\n                }\r\n            }\r\n        }\r\n        //Make sure all the net sales are at two decimal places\r\n        for (let i = 0; i < tableMapData.length; i++) {\r\n            tableMapData[i].NetSales = tableMapData[i].NetSales.toFixed(2);\r\n        }\r\n        this.setState({tableMapData: tableMapData});\r\n    }\r\n\r\n    calculateRegionData = (data) => {\r\n        let regionData = [];\r\n        let regionList = [];\r\n        let newObject = {};\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            regionList.push(data[i].Region)\r\n        }\r\n        regionList = regionList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n        //console.log(regionList);\r\n        for (let i=0; i < regionList.length; i++) {\r\n            newObject = {\r\n                Region: regionList[i],\r\n                NetUnits: 0,\r\n                //NetSales: 0\r\n            }\r\n            regionData.push(newObject);\r\n        }\r\n        for (let i = 0; i < regionData.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (regionData[i].Region === data[j].Region) {\r\n                    regionData[i].NetUnits += data[j].NetUnits;\r\n                    //regionData[i].NetSales += data[j].NetSales;\r\n                }\r\n            }\r\n        }\r\n        //Fixed the net sales tofixed\r\n        // for (let i=0; i < regionData.length; i++) {\r\n        //     regionData[i].NetSales = regionData[i].NetSales.toFixed(2);\r\n        // }\r\n        this.setState({regionData: regionData},() => {\r\n            //console.log(this.state.regionData);\r\n        });\r\n    }\r\n\r\n    calculateChargebackData = (data) => {\r\n        let chargeData = [];\r\n        let dateList = [];\r\n        let newObject = {};\r\n        let monthDate = null;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].Store === 'Itchio') {\r\n                data[i].Date = data[i].Date.split(' ')[0];\r\n            }\r\n            monthDate = moment(data[i].Date).format('YYYY MMMM');\r\n            dateList.push(monthDate);\r\n        }\r\n        dateList = dateList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n\r\n        for (let i=0; i < dateList.length; i++) {\r\n            newObject = {\r\n                Month: dateList[i],\r\n                ChargeBacks: 0,\r\n                ChargeBacksUSD: 0\r\n            }\r\n            chargeData.push(newObject);\r\n        }\r\n        for (let i = 0; i < chargeData.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                monthDate = moment(data[j].Date).format('YYYY MMMM');\r\n                if (monthDate === chargeData[i].Month) {\r\n                    if (data[j].Store !== 'Itchio') {\r\n                        chargeData[i].ChargeBacks += data[j].Chargebacks;\r\n                        chargeData[i].ChargeBacksUSD += data[j].ChargebacksUSD;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({chargebackData: chargeData}, () => {\r\n            //console.log(this.state.chargebackData);\r\n        })\r\n\r\n    }\r\n\r\n    calculateTimeSeriesData = (data) => {\r\n        let timeData = [];\r\n        let dateList = [];\r\n        let newObject = {};\r\n        let monthDate = null;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            // if (data[i].Store === 'Itchio') {\r\n            //     data[i].Date = data[i].Date.split(' ')[0];\r\n            //     //console.log(data[i].Date);\r\n            // }\r\n            monthDate = moment(data[i].Date).format('YYYY MMMM');\r\n            dateList.push(monthDate);\r\n        }\r\n        dateList = dateList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n\r\n        for (let i=0; i < dateList.length; i++) {\r\n            newObject = {\r\n                Month: dateList[i],\r\n                NetUnits: 0,\r\n                NetSales: 0\r\n            }\r\n            timeData.push(newObject);\r\n        }\r\n\r\n        for (let i = 0; i < timeData.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                monthDate = moment(data[j].Date).format('YYYY MMMM');\r\n                if (monthDate === timeData[i].Month) {\r\n                    timeData[i].NetUnits += data[j].NetUnits;\r\n                    timeData[i].NetSales += data[j].NetSales;\r\n                }               \r\n            }\r\n        }\r\n\r\n        for (let i=0; i < timeData.length; i++) {\r\n            timeData[i].NetSales = timeData[i].NetSales.toFixed(2);\r\n        }\r\n        this.setState({timeSeriesData: timeData}, () => {\r\n            //console.log(this.state.timeSeriesData);\r\n        });\r\n\r\n    }\r\n\r\n    calculatePlatformData = (data) => {\r\n        let platformData = [];\r\n        let platformList = [];\r\n        let newObject = {};\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            platformList.push(data[i].Platform);\r\n        }\r\n        platformList = platformList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n        for (let i = 0; i < platformList.length; i++) {\r\n            newObject = {\r\n                Platform: platformList[i],\r\n                NetUnits: 0,\r\n                //NetSales: 0\r\n            }\r\n            platformData.push(newObject);\r\n        }\r\n        for (let i =0; i <platformData.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (platformData[i].Platform === data[j].Platform) {\r\n                    platformData[i].NetUnits += data[j].NetUnits;\r\n                    //platformData[i].NetSales += data[j].NetSales;\r\n                }\r\n            }\r\n        }\r\n        //Fixed the net sales tofixed\r\n        // for (let i=0; i < platformData.length; i++) {\r\n        //     platformData[i].NetSales = platformData[i].NetSales.toFixed(2);\r\n        // }\r\n        this.setState({platformData: platformData},() => {\r\n            //console.log(this.state.platformData);\r\n        });\r\n    }\r\n\r\n    setTopFiltersHandler = (data) => {\r\n        let storeFrontList = ['All Stores'],\r\n            gameList = ['All Games'],\r\n            timeList = [],\r\n            //timeKeyList = [],\r\n            storeKeyList = [],\r\n            gameKeyList = [],\r\n            monthDate = null;\r\n\r\n        //SET STOREFRONT FILTERS\r\n        storeKeyList = Object.keys(data);\r\n        for (let key in storeKeyList) {\r\n            storeFrontList.push(storeKeyList[key]);\r\n        }\r\n        storeFilters = this.createSelectItems(storeFrontList);\r\n\r\n        //SET GAME FILTERS\r\n        for (let store in storeKeyList) {\r\n            gameKeyList = Object.keys(data[storeKeyList[store]]);\r\n            for (let key in gameKeyList) {\r\n                gameList.push(gameKeyList[key]);\r\n            }\r\n        }\r\n        gameList = gameList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n        gameFilters = this.createSelectItems(gameList)\r\n\r\n        //SET TIME FILTERS\r\n        for (let store in storeKeyList) {\r\n            for (let game in gameKeyList) {\r\n                for (let i = 0; i < data[storeKeyList[store]][gameKeyList[game]].data.length; i++) {\r\n                    if (storeKeyList[store] === 'Steam') {\r\n                        monthDate = moment(data[storeKeyList[store]][gameKeyList[game]].data[i].Date).format('YYYY MMMM');                       \r\n                    } else if (storeKeyList[store] === 'Itchio') {\r\n                        data[storeKeyList[store]][gameKeyList[game]].data[i]['created_at'] = data[storeKeyList[store]][gameKeyList[game]].data[i]['created_at'].split(' ')[0];\r\n                        monthDate = moment(data[storeKeyList[store]][gameKeyList[game]].data[i]['created_at']).format('YYYY MMMM');\r\n                    }\r\n                    timeList.push(monthDate);\r\n                }\r\n            }\r\n        }\r\n        timeList = timeList.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n\r\n        //Set the Initial Date States\r\n        let newFilters = {\r\n            store: this.state.filters.store,\r\n            game: this.state.filters.game,\r\n            dateStart: this.state.filters.dateStart,\r\n            dateEnd: this.state.filters.dateEnd,\r\n            country: this.state.filters.country,\r\n            region: this.state.filters.region,\r\n            platform: this.state.filters.platform\r\n        }\r\n        newFilters.dateStart = timeList[0];\r\n        newFilters.dateEnd = timeList[timeList.length - 1];\r\n        this.setState({filters: newFilters});\r\n\r\n        timeFiltersStart = this.createSelectItems(timeList);\r\n        timeFiltersEnd = this.createSelectItems(timeList);\r\n    }\r\n\r\n    createSelectItems = (array) => {\r\n        let items = [];\r\n        for (let i = 0; i <= array.length; i++) {\r\n            items.push(<option key={i} value={array[i]}>{array[i]}</option>)\r\n        }\r\n        return items;\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Dashboard\">\r\n                <FilterTop>\r\n                    Show Me Sales Data For \r\n                        <select className=\"SelectBox\" onChange={(a) => {\r\n                            this.setNewFiltersHandler(a, 'game');\r\n                        }}\r\n                        value={this.state.filters.game}>\r\n                            {gameFilters}\r\n                        </select> \r\n                    On \r\n                        <select className=\"SelectBox\" onChange={(a) => {\r\n                            this.setNewFiltersHandler(a, 'store');\r\n                        }}\r\n                        value={this.state.filters.store}>\r\n                            {storeFilters}\r\n                        </select>\r\n                    From\r\n                        <select className=\"SelectBox\" onChange={(a) => {\r\n                            this.setNewFiltersHandler(a, 'dateStart');\r\n                        }}\r\n                        value={this.state.filters.dateStart}>\r\n                            {timeFiltersStart}\r\n                        </select>\r\n                    To\r\n                        <select className=\"SelectBox\" onChange={(a) => {\r\n                            this.setNewFiltersHandler(a, 'dateEnd');\r\n                        }}\r\n                        value={this.state.filters.dateEnd}>\r\n                            {timeFiltersEnd}\r\n                        </select>\r\n                </FilterTop>\r\n                <DashSection width={\"40%\"}>\r\n                    <h4>Sales By Country</h4>\r\n                    <Map mapData={this.state.tableMapData}/>\r\n                    <p style={{fontSize: 12}}>Net Units Sold By Month</p>\r\n                    <BarGraph graphid=\"BarGraph\" height={270} width={520} data={this.state.timeSeriesData}/>\r\n                </DashSection>\r\n\r\n                <DashSection width={\"30%\"}>\r\n                    <h4>Sales Table</h4>\r\n                    <Table tableData={this.state.tableMapData}/>\r\n                    <p style={{fontSize: 12, marginTop: '32px'}}>Chargebacks/Returns by Month</p>\r\n                    <LineGraph graphid={\"LineGraph\"} width={400} height={280} data={this.state.chargebackData}/>\r\n                </DashSection>\r\n\r\n                <DashSection width={\"18%\"}>\r\n                    <div className=\"pieSection\">\r\n                        <p style={{fontSize: 12}}>Net Units Sold By Region</p>\r\n                        <PieChart graphID=\"pieRegion\" pieData={this.state.regionData} width={200} height={200}/>\r\n                    </div>\r\n                    <div className=\"pieSection\">\r\n                        <p style={{fontSize: 12}}>Count of Platform By Platform</p>\r\n                        <PieChart graphID=\"piePlatform\" pieData={this.state.platformData} width={200} height={200}/>\r\n                    </div>\r\n                </DashSection>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => {\r\n\r\n    return(\r\n        props.show ? <div className=\"Backdrop\" \r\n            onClick={props.clicked}></div> : null\r\n    );\r\n}\r\n\r\nexport default backdrop;","import React, {Component} from 'react';\r\n\r\nimport Backdrop from './Backdrop/Backdrop';\r\nimport './Modal.css';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show ||\r\n        nextProps.children !== this.props.children;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Backdrop \r\n                    show={this.props.show}\r\n                    clicked={this.props.modalClosed}/>\r\n                <div\r\n                    className=\"Modal\"\r\n                    style={{\r\n                        transform: this.props.show ?\r\n                        'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1': '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport Papa from 'papaparse';\r\n\r\nimport './FileDrop.css';\r\n\r\nlet showDropDialog = null;\r\nconst acceptedPlatforms = ['Steam', 'Itchio'];\r\n\r\nclass FileDrop extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            accepted: [],\r\n            rejected: [],\r\n            data: {},\r\n            dropFileType : acceptedPlatforms[0]\r\n        }\r\n\r\n      this.onDrop = this.onDrop.bind(this);\r\n      this.clickModalClosed = this.clickModalClosed.bind(this);\r\n    }\r\n\r\n    onDrop = (acceptedFiles, rejectedFiles) => {\r\n\r\n        this.setState({accepted: acceptedFiles, rejected: rejectedFiles});\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            const fileAsText = reader.result;\r\n            let newFileAsText = null;\r\n            let newData = this.state.data;\r\n            let platformID = 0;\r\n            let gameName = \"\";\r\n\r\n            switch(this.state.dropFileType) {\r\n              case acceptedPlatforms[0]:\r\n                  let lines = fileAsText.split('\\n');\r\n                  lines.splice(0,3);\r\n                  newFileAsText = lines.join('\\n'); \r\n                  platformID = 0;\r\n                  break;\r\n              case acceptedPlatforms[1]:\r\n                  newFileAsText = fileAsText;\r\n                  platformID = 1;\r\n                  break;\r\n              default: \r\n                  newFileAsText = fileAsText;\r\n                  break;\r\n            }\r\n\r\n            //Parse through the data and return object\r\n            const data = Papa.parse(newFileAsText, {\r\n                header: true,\r\n                skipEmptyLines: true,\r\n                dynamicTyping: true\r\n            });\r\n\r\n            if (platformID === 0) {\r\n                gameName = data.data[0]['Game'];\r\n            }\r\n            else if (platformID === 1) {\r\n                gameName = data.data[0]['object_name'];\r\n            }\r\n            let newObj = {};\r\n            newObj[gameName] = data;\r\n            newData[this.state.dropFileType] = newObj;\r\n            this.setState({data: newData});\r\n        };\r\n        reader.onabort = () => console.log('file reading was aborted');\r\n        reader.onerror = () => console.log('file reading has failed');\r\n        \r\n        for (let file in acceptedFiles) {\r\n          reader.readAsText(acceptedFiles[file]);\r\n        }\r\n    }\r\n\r\n    clickModalClosed() {\r\n        //Close the modal and send the raw data to parent\r\n        this.props.sendData(this.state.data);\r\n        this.props.modalClosed();\r\n    }\r\n\r\n    fileTypeHandler = (e) => {\r\n        this.setState({dropFileType: e.target.value});\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.accepted.length > 0 || this.state.rejected.length > 0) {\r\n          showDropDialog = (\r\n            <div>\r\n              <h4>Accepted Files</h4>\r\n              <ul>\r\n                  {this.state.accepted.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)}\r\n              </ul>\r\n              <h4>Rejected Files</h4>\r\n              <ul>\r\n                  {this.state.rejected.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)}\r\n              </ul>\r\n              <button \r\n                className=\"FileDropBtn\"\r\n                onClick={this.clickModalClosed}>All Done!</button>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const baseStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            borderWidth: 2,\r\n            borderColor: 'blue',\r\n            borderStyle: 'solid',\r\n            borderRadius: 2,\r\n            textAlign: 'center'\r\n        };\r\n        const activeStyle = {\r\n            borderColor: 'lime',\r\n            backgroundColor: '#eee'\r\n        };\r\n\r\n        return(\r\n          <section>\r\n            <select onChange={this.fileTypeHandler} id=\"fileType\" name=\"File Type\">\r\n              <option value={acceptedPlatforms[0]}>{acceptedPlatforms[0]}</option>\r\n              <option value={acceptedPlatforms[1]}>{acceptedPlatforms[1]}</option>\r\n            </select>\r\n            <Dropzone accept=\".csv\" onDrop={this.onDrop}>\r\n              {({getRootProps, getInputProps, isDragActive}) => {\r\n                  let styles = {...baseStyle}\r\n                  styles = isDragActive ? {...styles, ...activeStyle} : styles\r\n                  return (\r\n                    <div\r\n                        {...getRootProps()}\r\n                        style={styles}\r\n                    >\r\n                      <input {...getInputProps()} />\r\n                      {\r\n                          isDragActive ?\r\n                            <p>Drop files here...</p> :\r\n                            <p>Try dropping some files here, or click to select files to upload.</p>\r\n                      }\r\n                    </div>\r\n                  );\r\n              }}\r\n            </Dropzone>\r\n            <aside>\r\n              {showDropDialog}\r\n            </aside>\r\n        </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileDrop;","import React, { Component } from 'react';\r\n\r\nimport Header from '../../components/Header/Header';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n//import SideDrawer from '../../components/SideDrawer/SideDrawer';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport FileDrop from '../../components/Modal/FileDrop/FileDrop';\r\n\r\nclass Layout extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploading: false,\r\n            rawData: null\r\n        };\r\n\r\n        this.openModalHander = this.openModalHander.bind(this);\r\n        this.closeModalHandler = this.closeModalHandler.bind(this);\r\n        //this.getRawDataHandler = this.getRawDataHandler.bind(this);\r\n    }\r\n\r\n    openModalHander() {\r\n        this.setState({uploading: true})\r\n    }\r\n\r\n    closeModalHandler() {\r\n        this.setState({uploading: false})\r\n    }\r\n\r\n    getRawDataHandler = (childRawData) => {\r\n        this.setState({rawData: childRawData}, () => {\r\n            //I DUNNO\r\n        });\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className=\"Layout\">\r\n                <Modal show={this.state.uploading}\r\n                modalClosed={this.closeModalHandler}>\r\n                    <FileDrop modalClosed={this.closeModalHandler} sendData={this.getRawDataHandler}/>\r\n                </Modal>\r\n                <Header openmodal={this.openModalHander} />\r\n                <Dashboard newData={this.state.rawData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}